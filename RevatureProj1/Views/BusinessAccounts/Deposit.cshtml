@model Banking.Models.BusinessAccount

@{
    ViewData["Title"] = "Deposit";
}

<h1>Deposit Action</h1>

@{ await Html.RenderPartialAsync("DetailsAccount"); }


<div class="row">
    <div class="col-md-4">
        <form asp-action="Deposit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Balance" class="control-label">Deposit Amount</label>
                <input asp-for="Balance" class="form-control" value="0" />
                <span asp-validation-for="Balance" class="text-danger"></span>
                @{ 
                    if(Model.Balance == 0)
                    {
                        @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                    }
                }
            </div>
            @{ 
                if(Model.Overdraft > 0)
                {
                      <p style="color:forestgreen;">Warning: Account has a Overdraft Facility, any deposit will first pay off Overdraft Facility</p>
                }
            }
            <div class="form-group">
                <input type="submit" value="Submit Deposit" class="btn btn-primary" 
                            @{ 
                               if(Model.IsOpen == false)
                               {
                                    @:disabled="disabled" 
                               }
                            }
                       
                       />
            </div>
            <a asp-action="Index">Back to List</a>
        </form>
    </div>
</div>
