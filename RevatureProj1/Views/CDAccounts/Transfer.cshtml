@*@model IEnumerable<Banking.Models.CheckingAccount>*@
@model RevatureProj1.ViewModels.CheckingTransferViewModel

@{
    ViewData["Title"] = "Transfer";
}

<h1>Transfer Funds Menu</h1>
<div>
    <hr />
    <h4>Transferring From The Account</h4>
    <dl class="row">
        <dt class="col-sm-2">
            <span>Account Number</span>
        </dt>
        <dd class="col-sm-10">
            <span>@ViewBag.AcctInfo.AccountNumber</span>
        </dd>
        <dt class="col-sm-2">
            <span>Balance</span>
        </dt>
        <dd class="col-sm-10">
            <span>@ViewBag.AcctInfo.Balance.ToString("c")</span>
        </dd>
        <dt class="col-sm-2">
            <span>Maturity Date</span>
        </dt>
        <dd class="col-sm-10">
            <span>@ViewBag.AcctInfo.MaturityDate.ToString("MM/dd/yyyy")</span>
        </dd>
    </dl>
</div>

<hr />
<hr />
<h4>Choose Destination Account</h4>
<div class="form-group row">
    <label class="col-sm-2 col-form-label"></label>
    <div class="col-sm-10">

        <form asp-action="Transfer">

            <select name="accountTransfer" class="custom-select mr-sm-2">
                <optgroup label="Checking Accounts">
                    @{
                        foreach (var item in Model.CheckingList)
                        {
                            <option value="@item.AccountNumber">Account Number: @item.AccountNumber | Balance: @item.Balance.ToString("c")</option>
                        }

                    }
                </optgroup>
                <optgroup label="Business Accounts">
                    @{

                        foreach (var item in Model.BusinessList)
                        {
                            <option value="@item.AccountNumber">Account Number: @item.AccountNumber | Balance: @item.Balance.ToString("c") | Overdraft @item.Overdraft.ToString("c") </option>
                        }
                    }
                </optgroup>
                <optgroup label="Loan Accounts">
                    @{

                        foreach (var item in Model.LoanList)
                        {
                            <option value="@item.AccountNumber">Account Number: @item.AccountNumber | Balance: @item.Balance.ToString("c")</option>

                        }

                    }
                </optgroup>

            </select>
            <br />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <label asp-for="Amount" class="control-label">Transfer Amount</label>
            <input asp-for="Amount" class="form-control" value="" name="amount" />
            <span asp-validation-for="Amount" class="text-danger"></span>
            <br />
            <div class="form-group">
                <input type="submit" value="Submit Transfer" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>
<a asp-action="Index">Back to Checking Accounts</a>

@{
    if (ViewBag.Success)
    {
        // <script>alert("Succesfully Transferred: $" + @ViewBag.Amount + " From " + "Account @ViewBag.AccountNumber");</script>
        <div class="alert alert-dismissible alert-success">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>Transfer Succesfully Completed [$@ViewBag.Amount was transferred from Account:@ViewBag.AccountNumber] </strong>
        </div>
    }
}
